%{
% ОПЕРАЦІЇ НАД НЕЧІТКИМИ МНОЖИНАМИ (Fuzzy Set Operations)
% =========================================================
% Призначення: Демонстрація різних операцій об'єднання та перетину
% нечітких множин (T-норми та T-конорми)
%
% Теорія:
% T-конорми (об'єднання, OR, ∪):
%   1. max(A,B) - стандартна операція (Заде)
%   2. probor(A,B) = A + B - A*B - імовірнісна сума
%
% T-норми (перетин, AND, ∩):
%   1. min(A,B) - стандартна операція (Заде)
%   2. prod(A,B) = A * B - алгебраїчний добуток
%
% Вхідні дані:
%   mf1 - гаусова функція з центром у x=5
%   mf2 - гаусова функція з центром у x=7
%
% Результати на 4-х графіках:
%   Figure 1: max(mf1, mf2) - стандартне об'єднання
%   Figure 2: min(mf1, mf2) - стандартний перетин
%   Figure 3: probor(mf1, mf2) - імовірнісне об'єднання
%   Figure 4: prod(mf1, mf2) - алгебраїчний перетин
%
% Порівняння операцій:
%   max ≥ probor (для об'єднання)
%   min ≥ prod (для перетину)
%
% Застосування: Комбінування нечітких правил, логічні операції
% в системах прийняття рішень, агрегація експертних оцінок
%}

% Кількість точок для дискретизації
N = 501;

% Мінімальна межа області визначення
minX = -5;

% Максимальна межа області визначення
maxX = 20;

% Створення вектора з N рівновіддалених точок від minX до maxX
x = linspace(minX,maxX,N);

% Перша гаусова функція належності: σ=1, центр=5
mf1 = gaussmf(x,[1 5]);

% Друга гаусова функція належності: σ=1, центр=7
mf2 = gaussmf(x,[1 7]);

% === ОПЕРАЦІЯ 1: СТАНДАРТНЕ ОБ'ЄДНАННЯ (max) ===
% Обчислення поточкового максимуму - стандартна T-конорма Заде
mf = max(mf1,mf2);

% Створення першого графічного вікна
figure(1)

% Побудова результату операції max (товста лінія)
plot(x,mf,'LineWidth',3); grid;

% === ОПЕРАЦІЯ 2: СТАНДАРТНИЙ ПЕРЕТИН (min) ===
% Створення другого графічного вікна
figure(2)

% Обчислення поточкового мінімуму - стандартна T-норма Заде
mf3 = min(mf1,mf2);

% Побудова результату операції min
plot(x,mf3,'LineWidth',3); grid;

% === ОПЕРАЦІЯ 3: ІМОВІРНІСНЕ ОБ'ЄДНАННЯ (probor) ===
% Створення третього графічного вікна
figure(3)

% Обчислення probor: μ = μ1 + μ2 - μ1*μ2 (імовірнісна OR)
mf4 = probor([mf1;mf2])% об'єднання

% Побудова результату імовірнісного об'єднання
plot(x,mf4,'LineWidth',3); grid;

% === ОПЕРАЦІЯ 4: АЛГЕБРАЇЧНИЙ ПЕРЕТИН (prod) ===
% Створення четвертого графічного вікна
figure(4)

% Обчислення добутку: μ = μ1 * μ2 (алгебраїчна AND)
mf4 = prod([mf1;mf2])

% Побудова результату алгебраїчного перетину
plot(x,mf4,'LineWidth',3); grid; % перетин

