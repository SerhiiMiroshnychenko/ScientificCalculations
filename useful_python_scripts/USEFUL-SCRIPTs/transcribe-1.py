import os
import time
import ffmpeg
import whisper

# üîß –í–°–¢–ê–í –°–Æ–î–ò –®–õ–Ø–• –î–û –°–í–û–ì–û –§–ê–ô–õ–£
file_path = r"D:\PROJECTs\MY\ScientificCalculations\SC\ScientificCalculations\useful_python_scripts\USEFUL-SCRIPTs\NDP-0123.mp4"

def format_timestamp_simple(seconds):
    """–§–æ—Ä–º–∞—Ç—É—î —Å–µ–∫—É–Ω–¥–∏ —É —Ñ–æ—Ä–º–∞—Ç HH:MM:SS (–±–µ–∑ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥)"""
    hours = int(seconds // 3600)
    minutes = int((seconds % 3600) // 60)
    secs = int(seconds % 60)
    return f"{hours:02}:{minutes:02}:{secs:02}"

def transcribe_to_text(file_path):
    if not os.path.isfile(file_path):
        print(f"–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
        return

    start_time = time.time()

    print("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ...")
    model = whisper.load_model("medium", device="cuda")

    print("–¢—Ä–∏–≤–∞—î —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è...")
    result = model.transcribe(file_path, language='uk', verbose=True)

    segments = result.get("segments", [])
    text_only = []
    text_with_timestamps = []

    for segment in segments:
        start = segment["start"]
        end = segment["end"]
        text = segment["text"].strip()

        text_only.append(text)

        start_ts = format_timestamp_simple(start)
        end_ts = format_timestamp_simple(end)
        line = f"[{start_ts} --> {end_ts}]  {text}"
        text_with_timestamps.append(line)

    base_name = os.path.splitext(os.path.basename(file_path))[0]
    output_txt_path = os.path.join(".", f"{base_name}_ua.txt")
    output_log_path = os.path.join(".", f"{base_name}_with_timestamps.txt")

    with open(output_txt_path, "w", encoding="utf-8") as f:
        f.write("\n".join(text_only))

    with open(output_log_path, "w", encoding="utf-8") as f:
        f.write("\n".join(text_with_timestamps))

    print(f"\n‚úÖ –¢–µ–∫—Å—Ç –±–µ–∑ —Ç–∞–π–º—ñ–Ω–≥—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ —Ç—É—Ç: {os.path.abspath(output_txt_path)}")
    print(f"‚úÖ –¢–µ–∫—Å—Ç –∑ —Ç–∞–π–º—ñ–Ω–≥–æ–º –∑–±–µ—Ä–µ–∂–µ–Ω–æ —Ç—É—Ç: {os.path.abspath(output_log_path)}")

    # ‚ûï –í–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    try:
        probe = ffmpeg.probe(file_path)
        duration = float(probe['format']['duration'])
        duration_fmt = format_timestamp_simple(duration)
        print(f"‚è±Ô∏è –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≤—ñ–¥–µ–æ: {duration_fmt}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≤—ñ–¥–µ–æ: {e}")

    elapsed = time.time() - start_time
    elapsed_fmt = format_timestamp_simple(elapsed)
    print(f"üß† –ß–∞—Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—ó: {elapsed_fmt}")

transcribe_to_text(file_path)
