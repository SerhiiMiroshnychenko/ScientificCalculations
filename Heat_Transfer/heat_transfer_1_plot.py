"""
Завдання: Моделювання двовимірного розподілу температури в квадратній пластині
методом скінченних різниць.

Граничні умови:
- Ліва сторона (x=0): T1 = 80°C
- Нижня сторона (y=max): T2 = 60°C
- Права сторона (x=max): T3 = 45°C
- Верхня сторона (y=0): T4 = 50°C

Параметри моделювання:
- Розмір сітки: 10x10 точок
- Кількість ітерацій: 25
- Початкова температура всередині пластини: 25°C
"""

import numpy as np
import matplotlib.pyplot as plt

# Розміри сітки
xdim = 10
ydim = 10

# Кількість ітерацій та крок
niter = 25
delta = 1

# Граничні умови (температура на границях пластини)
t1 = 80  # ліва сторона
t2 = 60  # нижня сторона
t3 = 45  # права сторона
t4 = 50  # верхня сторона

# Початкова температура всередині пластини
t_guess = 25

def print_temperature_matrix(matrix, title=""):
    """Функція для форматованого виведення матриці температур"""
    print(f"\n{title}")
    print("-" * 80)
    print("     ", end="")
    print("X", end="\t")
    for j in range(matrix.shape[1]):
        print(f"{j:<7}", end="")
    print("\nY")
    print("-" * 80)
    for i in range(matrix.shape[0]):
        print(f"{i:<4}", end=" ")
        for j in range(matrix.shape[1]):
            print(f"{matrix[i,j]:>7.2f}", end="")
        print()
    print("-" * 80)

# Створення масиву температур та встановлення початкових умов
T = np.zeros((xdim,ydim))
# Виведення нульової матриці
print_temperature_matrix(T, "Нульова матриця температури:")

T.fill(t_guess)
# Матриця температури до встановлення граничних умов
print_temperature_matrix(T, "Матриця температури до встановлення граничних умов:")

# Встановлення граничних умов
T[0:xdim,0] = t1    # ліва сторона
T[0,1:ydim] = t2    # нижня сторона
T[0:xdim,ydim-1] = t3  # права сторона
T[xdim-1,1:ydim] = t4  # верхня сторона
# Виведення початкового стану
print_temperature_matrix(T, "Початковий розподіл температури:")

# Ітераційний процес розрахунку методом скінченних різниць
for it in range(0,niter):
    for i in range(1,xdim-1,delta):
        for j in range(1,ydim-1,delta):
            # Розрахунок нової температури в точці як середнє арифметичне
            # температур у сусідніх точках
            T[i,j] = 0.25*(T[i+1][j] + T[i-1][j] + T[i][j+1] + T[i][j-1])

    # Виведення проміжних результатів кожні 5 ітерацій
    if (it + 1) % 5 == 0:
        print_temperature_matrix(T, f"Ітерація {it + 1}:")

# Виведення фінального розподілу температури
print_temperature_matrix(T, "\nФінальний розподіл температури:")

# Візуалізація результатів
plt.figure(figsize=(10,10))
plt.contourf(T,80,cmap='jet')
plt.grid(color='black',linestyle='--')
plt.colorbar(label='Температура, °C')
plt.title('Розподіл температури в пластині')
plt.xlabel('X координата')
plt.ylabel('Y координата')
plt.show()

"""
Аналіз результатів:

1. Розподіл температури в пластині відповідає фізичним очікуванням:
   температура плавно змінюється від гарячих до холодних границь.
   
2. Найвища температура (80°C) спостерігається на лівій стороні пластини,
   створюючи градієнт температури в напрямку правої сторони (45°C).
   
3. Кількість ітерацій (25) достатня для досягнення стабільного розподілу
   температури при заданих граничних умовах.

Висновки:
1. Метод скінченних різниць ефективно моделює стаціонарний розподіл
   температури в двовимірній пластині.
   
2. Візуалізація результатів за допомогою контурного графіка дозволяє
   легко аналізувати розподіл температури.
   
3. Програма може бути використана для моделювання різних теплових
   режимів шляхом зміни граничних умов та параметрів моделювання.
"""
