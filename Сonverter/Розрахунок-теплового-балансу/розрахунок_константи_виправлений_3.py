# -*- coding: utf-8 -*-
# Автоматичний розрахунок теплового балансу для обраного варіанту

# ================= КОНСТАНТИ =================

# Коефіцієнти для розрахунку фізичного тепла чавуну (кДж/кг)
CHAV_COEFFICIENT_1 = 61.9  # Перший коефіцієнт рівняння
CHAV_COEFFICIENT_2 = 0.88  # Температурний коефіцієнт (кДж/кг·°C)

# Коефіцієнти для розрахунку тепла міксерного шлаку
PERCENT_DIVISOR = 100  # Дільник для переведення відсотків у частки
MSH_COEFFICIENT_1 = 1.53  # Температурний коефіцієнт (кДж/кг·°C)
MSH_OFFSET = 710  # Тепловий зсув (кДж/кг)

# Коефіцієнти для розрахунку тепла окислення домішок (кДж/кг)
C_TO_CO_HEAT = 11680  # Тепловий ефект окислення вуглецю до CO (кДж/кг)
C_TO_CO2_HEAT = 35300  # Тепловий ефект окислення вуглецю до CO2 (кДж/кг)
SI_HEAT = 26930  # Тепловий ефект окислення кремнію (кДж/кг)
MN_HEAT = 7035  # Тепловий ефект окислення марганцю (кДж/кг)
P_HEAT = 19755  # Тепловий ефект окислення фосфору (кДж/кг)

# Коефіцієнти для розрахунку тепла окислення заліза (кДж/кг)
FEO_HEAT = 3600  # Тепловий ефект утворення FeO (кДж/кг)
FE2O3_HEAT = 5110  # Тепловий ефект утворення Fe2O3 (кДж/кг)

# Коефіцієнти для розрахунку тепла шлакоутворення (кДж/кг)
SIO2_HEAT = 2300  # Тепловий ефект утворення SiO2 у шлаку (кДж/кг)
P2O5_HEAT = 4886  # Тепловий ефект утворення P2O5 у шлаку (кДж/кг)

# Коефіцієнти для розрахунку тепла рідкої сталі (кДж/кг)
ST_COEFFICIENT_1 = 54.9  # Перший коефіцієнт рівняння
ST_COEFFICIENT_2 = 0.84  # Температурний коефіцієнт (кДж/кг·°C)

# Коефіцієнти для розрахунку тепла шлаку (кДж/кг)
SHL_COEFFICIENT = 2.09  # Температурний коефіцієнт (кДж/кг·°C)
SHL_OFFSET = 1380  # Тепловий зсув (кДж/кг)

# Коефіцієнти для розрахунку тепла пилу (кДж/кг)
PIL_COEFFICIENT_1 = 23.05  # Перший коефіцієнт рівняння
PIL_COEFFICIENT_2 = 0.69  # Температурний коефіцієнт (кДж/кг·°C)
AVERAGE_DIVISOR = 2  # Дільник для розрахунку середньої температури

# Коефіцієнти для розрахунку тепла викидів, корольків та виплесків (кДж/кг)
VKV_COEFFICIENT_1 = 54.9  # Перший коефіцієнт рівняння
VKV_COEFFICIENT_2 = 0.838  # Температурний коефіцієнт (кДж/кг·°C)

# Коефіцієнти для розрахунку теплових втрат
VTR_PERCENT = 5  # Відсоток теплових втрат від загального надходження тепла

# Коефіцієнти для розрахунку тепла конвертерних газів
MOLAR_VOLUME = 22.4  # Мольний об'єм газу при нормальних умовах (л/моль)
CAL_TO_J = 41868  # Коефіцієнт переведення калорій в джоулі (Дж/ккал)

# Коефіцієнт для розрахунку тепла дисоціації карбонату кальцію (кДж/кг)
CACO3_HEAT = 4040  # Теплота дисоціації карбонату кальцію (кДж/кг)

# Коефіцієнти для переведення відсотків у фізичні величини
PERCENT_TO_FRACTION = 0.01  # Коефіцієнт для переведення % в частки (1/100)

# Теплові ефекти палива (кДж/кг)
SIC_HEAT = 17000  # Карбід кремнію
CAC2_HEAT = 10680  # Карбід кальцію
COAL_HEAT = 32000  # Антрацит
BIOMASS_HEAT = 21500  # Піролізована біомаса

# Додаткові матеріальні константи - зменшені до реалістичних значень
FEO_MSH = 0.8  # % FeO в міксерному шлаку
FEO_OK = 0.5  # % FeO в окатишах
FE2O3_FUT = 1.0  # % Fe2O3 у футерівці
FE2O3_OK = 0.3  # % Fe2O3 в окатишах
CO2_VAP = 5  # % CO2 у вапні

# Константи, які виносимо з variants
M_OKAT = 0.1  # Маса окатишів
M_FUT = 0.13  # Маса футерівки
T_SHL = 1600  # Температура шлаку
FEO = 10  # Вміст оксиду заліза FeO
FE2O3 = 1  # Вміст оксиду заліза Fe₂O₃
SIO2 = 10  # Вміст діоксиду кремнію
P2O5 = 1  # Вміст пентаоксиду фосфору
ALPHA = 0.1  # Коефіцієнт alpha
A_COEF = 100  # Коефіцієнт a (частка міксерного шлаку)
C_COEF = 100  # Коефіцієнт c (частка окатишів)

# Дані з "Таблиця-варантів.md" (скопійовано у вигляді списку словників)
variants = [
    {"M_чав": 71.8, "M_ст": 87.5, "M_шл": 16.0, "M_м.бр": 17.7, "M_м.ш": 1.3, "M_пил": 0.9, "Fe_vtr": 4.5, "t_чав": 1350, "t_ст": 1595},
    {"M_чав": 70.0, "M_ст": 85.0, "M_шл": 15.0, "M_м.бр": 5.0, "M_м.ш": 1.2, "M_пил": 0.85, "Fe_vtr": 4.2, "t_чав": 1335, "t_ст": 1630},
    {"M_чав": 72.0, "M_ст": 88.0, "M_шл": 16.5, "M_м.бр": 10.8, "M_м.ш": 1.3, "M_пил": 0.92, "Fe_vtr": 4.6, "t_чав": 1380, "t_ст": 1620},
    {"M_чав": 71.0, "M_ст": 86.5, "M_шл": 15.8, "M_м.бр": 7.9, "M_м.ш": 1.2, "M_пил": 0.87, "Fe_vtr": 4.3, "t_чав": 1360, "t_ст": 1620},
    {"M_чав": 70.5, "M_ст": 85.8, "M_шл": 15.5, "M_м.бр": 5.7, "M_м.ш": 1.2, "M_пил": 0.85, "Fe_vtr": 4.2, "t_чав": 1340, "t_ст": 1590},
    {"M_чав": 72.2, "M_ст": 88.2, "M_шл": 16.6, "M_м.бр": 8.1, "M_м.ш": 1.3, "M_пил": 0.93, "Fe_vtr": 4.7, "t_чав": 1390, "t_ст": 1620},
    {"M_чав": 70.8, "M_ст": 86.2, "M_шл": 15.7, "M_м.бр": 8.5, "M_м.ш": 1.2, "M_пил": 0.86, "Fe_vtr": 4.3, "t_чав": 1320, "t_ст": 1620},
    {"M_чав": 71.5, "M_ст": 87.0, "M_шл": 15.9, "M_м.бр": 7.2, "M_м.ш": 1.2, "M_пил": 0.88, "Fe_vtr": 4.4, "t_чав": 1370, "t_ст": 1600},
    {"M_чав": 71.2, "M_ст": 86.7, "M_шл": 15.8, "M_м.бр": 9.3, "M_м.ш": 1.2, "M_пил": 0.87, "Fe_vtr": 4.3, "t_чав": 1380, "t_ст": 1620},
    {"M_чав": 70.9, "M_ст": 86.3, "M_шл": 15.6, "M_м.бр": 9.5, "M_м.ш": 1.2, "M_пил": 0.86, "Fe_vtr": 4.3, "t_чав": 1380, "t_ст": 1590},
    {"M_чав": 70.0, "M_ст": 85.0, "M_шл": 15.0, "M_м.бр": 1.8, "M_м.ш": 1.2, "M_пил": 0.85, "Fe_vtr": 4.2, "t_чав": 1300, "t_ст": 1590},
    {"M_чав": 71.7, "M_ст": 87.7, "M_шл": 16.1, "M_м.бр": 7.7, "M_м.ш": 1.3, "M_пил": 0.91, "Fe_vtr": 4.6, "t_чав": 1370, "t_ст": 1610},
    {"M_чав": 70.2, "M_ст": 85.2, "M_шл": 15.1, "M_м.бр": 0.9, "M_м.ш": 1.2, "M_пил": 0.85, "Fe_vtr": 4.2, "t_чав": 1350, "t_ст": 1625},
    {"M_чав": 70.6, "M_ст": 85.6, "M_шл": 15.3, "M_м.бр": 1.3, "M_м.ш": 1.2, "M_пил": 0.85, "Fe_vtr": 4.2, "t_чав": 1300, "t_ст": 1600},
    {"M_чав": 71.3, "M_ст": 86.8, "M_шл": 15.9, "M_м.бр": 9.6, "M_м.ш": 1.2, "M_пил": 0.87, "Fe_vtr": 4.3, "t_чав": 1380, "t_ст": 1620},
]


def Q_chav(M_chav, t_chav):
    return M_chav * (CHAV_COEFFICIENT_1 + CHAV_COEFFICIENT_2 * t_chav)


def Q_msh(M_msh, t_msh):
    return M_msh * (A_COEF / PERCENT_DIVISOR) * (MSH_COEFFICIENT_1 * t_msh - MSH_OFFSET)


def Q_dom(C_metsh, M_st, C_pov, Si_metsh, Mn_metsh, Mn_pov, P_metsh, P_pov):
    return (
            (C_TO_CO_HEAT * (1 - ALPHA) + C_TO_CO2_HEAT * ALPHA) * (C_metsh - PERCENT_TO_FRACTION * M_st * C_pov)
            + SI_HEAT * Si_metsh
            + MN_HEAT * (Mn_metsh - PERCENT_TO_FRACTION * M_st * Mn_pov)
            + P_HEAT * (P_metsh - PERCENT_TO_FRACTION * M_st * P_pov)
    )


def Q_Fe(M_shl, chi):
    return PERCENT_TO_FRACTION * M_shl * (FEO_HEAT * FEO + FE2O3_HEAT * FE2O3 + FE2O3_HEAT * chi)


def Q_shl_utv(M_shl):
    return PERCENT_TO_FRACTION * M_shl * (SIO2_HEAT * SIO2 + P2O5_HEAT * P2O5)


def Q_st(M_st, t_st):
    return M_st * (ST_COEFFICIENT_1 + ST_COEFFICIENT_2 * t_st)


def Q_shl(M_shl):
    return M_shl * (SHL_COEFFICIENT * T_SHL - SHL_OFFSET)


def Q_pil(chi, t_chav, t_st):
    return chi * (PIL_COEFFICIENT_1 + PIL_COEFFICIENT_2 * (t_chav + t_st) / AVERAGE_DIVISOR)


def Q_vkv(Delta_Fe_vtr, chi, t_st):
    return (Delta_Fe_vtr - chi) * (VKV_COEFFICIENT_1 + VKV_COEFFICIENT_2 * t_st)


def Q_vtr(Q_nadh):
    return PERCENT_TO_FRACTION * Q_nadh * VTR_PERCENT


# Нові функції для розрахунку додаткових статей теплового балансу

# Функція для розрахунку тепла конвертерних газів
def Q_g(V_gi, T_st, T_chav, coefs):
    """
    Розрахунок тепла конвертерних газів.

    Параметри:
    V_gi (dict) - об'єми газів (CO, CO2, N2...) в м³
    T_st - температура сталі в К (= t_st + 273)
    T_chav - температура чавуну в К (= t_chav + 273)
    coefs (dict) - коефіцієнти теплоємності газів з Таблиці І.2

    Повертає:
    Сумарне тепло конвертерних газів в кДж
    """
    Q_gi_sum = 0
    for gas in V_gi:
        a = coefs[gas]['a']
        # Правильно обробляємо коефіцієнт b·10³ (множимо на 10⁻³)
        b = coefs[gas]['b'] * 1e-3
        # Правильно обробляємо коефіцієнт c·10⁻⁵ (множимо на 10⁵)
        c = coefs[gas]['c'] * 1e5 if coefs[gas]['c'] != 0 else 0

        # Використовуємо формулу (5.70) з методики
        heat = CAL_TO_J * V_gi[gas] * (
                a * (T_st - T_chav) +
                b * (T_st ** 2 - T_chav ** 2) -
                c * (1 / T_st - 1 / T_chav)
        ) / MOLAR_VOLUME

        Q_gi_sum += heat

    # Переводимо результат в кДж
    return Q_gi_sum / 1000


# Виправлена функція для розрахунку тепла дисоціації оксидів заліза
def Q_okys_Fe(M_chav, M_mbr):
    """
    Розрахунок тепла дисоціації оксидів заліза шихти.

    Параметри:
    M_chav - маса чавуну, кг
    M_mbr - маса металобрухту, кг

    Повертає:
    Тепло дисоціації оксидів заліза в кДж
    """
    # Працюємо безпосередньо з відсотками у формі від 0 до 100
    a_fraction = A_COEF / 100  # 100% -> 1.0
    c_fraction = C_COEF / 100  # 100% -> 1.0

    term1 = 3600 * 0.01 * (a_fraction * M_chav * FEO_MSH + c_fraction * M_mbr * FEO_OK)
    term2 = 5110 * 0.01 * (M_FUT * FE2O3_FUT + c_fraction * M_mbr * FE2O3_OK)

    return term1 + term2


# Функція для розрахунку тепла дисоціації карбонату кальцію
def Q_okys_CaCO3(M_vap):
    """
    Розрахунок тепла дисоціації карбонату кальцію вапна.

    Параметри:
    M_vap - маса вапна, кг

    Повертає:
    Тепло дисоціації карбонату кальцію в кДж
    """
    return CACO3_HEAT * PERCENT_TO_FRACTION * M_vap * CO2_VAP


def main():
    print("Розрахунок теплового балансу конвертерної плавки")
    n = int(input("Введіть номер варіанту (1-15): "))
    v = variants[n - 1]

    # Для прикладу: склад чавуну (можна розширити для кожного варіанту)
    C_metsh = 4.3
    Si_metsh = 0.4
    Mn_metsh = 1.1
    P_metsh = 0.18
    C_pov = 0.2
    Mn_pov = 0.2
    P_pov = 0.02

    # Розрахунок надходження тепла
    Q_chav_val = Q_chav(v["M_чав"], v["t_чав"])
    Q_msh_val = Q_msh(v["M_м.ш"], v["t_чав"])
    Q_dom_val = Q_dom(C_metsh, v["M_ст"], C_pov, Si_metsh, Mn_metsh, Mn_pov, P_metsh, P_pov)
    Q_Fe_val = Q_Fe(v["M_шл"], v["M_пил"])
    Q_shl_utv_val = Q_shl_utv(v["M_шл"])
    Q_nadh = Q_chav_val + Q_msh_val + Q_dom_val + Q_Fe_val + Q_shl_utv_val

    # Розрахунок витрати тепла - базові статті
    Q_st_val = Q_st(v["M_ст"], v["t_ст"])
    Q_shl_val = Q_shl(v["M_шл"])
    Q_pil_val = Q_pil(v["M_пил"], v["t_чав"], v["t_ст"])
    Q_vkv_val = Q_vkv(v["Fe_vtr"], v["M_пил"], v["t_ст"])
    Q_vtr_val = Q_vtr(Q_nadh)

    # Об'єми газів - приблизні значення
    V_gi = {
        'CO': 0.85,  # м³
        'CO2': 0.11,  # м³
        'N2': 0.02,  # м³
        'O2': 0.02   # м³
    }

    # Коефіцієнти теплоємності газів з Таблиці І.2
    gas_coefs = {
        'CO': {'a': 6.79, 'b': 0.98, 'c': -0.11},
        'CO2': {'a': 10.55, 'b': 2.16, 'c': -2.04},
        'N2': {'a': 6.66, 'b': 1.02, 'c': 0},
        'O2': {'a': 7.16, 'b': 1.0, 'c': -0.40}
    }

    # Розрахунок додаткових статей витрат тепла
    T_st = v["t_ст"] + 273  # Температура в К
    T_chav = v["t_чав"] + 273  # Температура в К

    Q_g_val = Q_g(V_gi, T_st, T_chav, gas_coefs)
    Q_okys_Fe_val = Q_okys_Fe(v["M_чав"], v["M_м.бр"])
    # Маса вапна (припустимо, 5% від маси шлаку)
    M_vap = 0.05 * v["M_шл"]
    Q_okys_CaCO3_val = Q_okys_CaCO3(M_vap)

    # Оновлення загальної витрати тепла з урахуванням додаткових статей
    Q_vytr = Q_st_val + Q_shl_val + Q_g_val + Q_okys_Fe_val + Q_okys_CaCO3_val + Q_pil_val + Q_vkv_val + Q_vtr_val

    # Розрахунок надлишку/дефіциту тепла
    delta_Q = Q_nadh - Q_vytr
    delta_Q_percent = delta_Q / Q_nadh * 100

    # Виведення результатів
    print("\n--- Результати розрахунку ---")
    print("\n-- НАДХОДЖЕННЯ ТЕПЛА --")
    print(f"Q_чав = {Q_chav_val:.2f} кДж ({Q_chav_val / Q_nadh * 100:.1f}%)")
    print(f"Q_м.ш = {Q_msh_val:.2f} кДж ({Q_msh_val / Q_nadh * 100:.1f}%)")
    print(f"Q_дом = {Q_dom_val:.2f} кДж ({Q_dom_val / Q_nadh * 100:.1f}%)")
    print(f"Q_Fe = {Q_Fe_val:.2f} кДж ({Q_Fe_val / Q_nadh * 100:.1f}%)")
    print(f"Q_шл.утв = {Q_shl_utv_val:.2f} кДж ({Q_shl_utv_val / Q_nadh * 100:.1f}%)")
    print(f"Q_надх = {Q_nadh:.2f} кДж (100.0%)")

    print("\n-- ВИТРАТА ТЕПЛА --")
    print(f"Q_ст = {Q_st_val:.2f} кДж ({Q_st_val / Q_vytr * 100:.1f}%)")
    print(f"Q_шл = {Q_shl_val:.2f} кДж ({Q_shl_val / Q_vytr * 100:.1f}%)")
    print(f"Q_г = {Q_g_val:.2f} кДж ({Q_g_val / Q_vytr * 100:.1f}%)")
    print(f"Q_окис^Fe = {Q_okys_Fe_val:.2f} кДж ({Q_okys_Fe_val / Q_vytr * 100:.1f}%)")
    print(f"Q_окис^CaCO3 = {Q_okys_CaCO3_val:.2f} кДж ({Q_okys_CaCO3_val / Q_vytr * 100:.1f}%)")
    print(f"Q_пил = {Q_pil_val:.2f} кДж ({Q_pil_val / Q_vytr * 100:.1f}%)")
    print(f"Q_в.к.в = {Q_vkv_val:.2f} кДж ({Q_vkv_val / Q_vytr * 100:.1f}%)")
    print(f"Q_втр = {Q_vtr_val:.2f} кДж ({Q_vtr_val / Q_vytr * 100:.1f}%)")
    print(f"Q_витр = {Q_vytr:.2f} кДж (100.0%)")

    print(f"\nΔQ = {delta_Q:.2f} кДж ({delta_Q_percent:.2f}% від надходження)")

    # Розрахунок коригуючих добавок
    if delta_Q > 0:
        print("Надлишок тепла. Розрахуйте додаткову масу металобрухту:")
        dM_mbr = delta_Q / (ST_COEFFICIENT_2 * v["t_ст"] + ST_COEFFICIENT_1)
        print(f"ΔM_м.бр = {dM_mbr:.2f} кг")
    else:
        print("Дефіцит тепла. Розрахуйте необхідну масу палива:")
        print("Варіанти палива:")
        fuels = {
            "Карбід кремнію": SIC_HEAT,
            "Карбід кальцію": CAC2_HEAT,
            "Антрацит": COAL_HEAT,
            "Піролізована біомаса": BIOMASS_HEAT
        }
        for fuel_name, Q_pal in fuels.items():
            dM_pal = abs(delta_Q) / Q_pal
            print(f"ΔM_пал = {dM_pal:.2f} кг ({fuel_name}, Q_пал = {Q_pal} кДж/кг)")


if __name__ == "__main__":
    main() 